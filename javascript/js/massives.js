let array = [24 , 19.5 , 'Hello' , 'w' , true];
// создаем массив
console.log(array);
// 0: 24
// 1: 19.5
// 2: "Hello"
// 3: "w"
// 4: true
// length: 5

// Обращение к элементу масива по индексу
console.log(array[3]);
// 3: "w" 

// переписывание данных масива
array[0] = 25;
array[2] = false;
array[-2] += 'orld';
array[6] = array[0] + array[1];
console.log(array);
// 0: 25 можно просто переписать
// 1: 19.5 ничего не менять
// 2: false поменять на совсем другой тип
// 3: "w" хотел это поменять но не питон
// 4: true
// empty пропустили элемент
// 6: 44.5 и создали с индексом 6
// -2: "undefinedorld" случайно создал словарь
// length: 7

console.log(array.length);
// 7 подсчитывает количество элементов

console.log(array.pop());
// 44.5 удаляет и возвращает
// последний элемент массива

array.push('добавляем' , "несколько")
// push позволяет добавить элементы 
// в конец массива
console.log(array);
// (8) [25, 19.5, false, 'w', true, empty,
// 'добавляем', 'несколько', -2: 'undefinedorld']
array[array.length] = 15;
// работает аналогично как push

console.log(array.shift());
// 25 удаляет и возвращает первый элемент массива

array.unshift('В начало масива');
// добавляет элемент В начало масива

array.length = 3;
// оставляет в нашем масиве только первые 3 элемента

array.length = 0;
// очищает масив 
// но опять же наш элемент [-2: 'undefinedorld'] 
// не считается в массиве и как его удалить ?

delete array[-2];
// а вот так можно удалять элементы по их индексу
array = [2 , 14 , 'boby', true];
delete array[1];
// (4) [2, empty, 'boby', true]

// Создавать масив так же можно при помощи функции
let arr = Array();
// создает пустой масив 

let arr1 = Array(5);
// создает пустой масив с 5 тью элементами 
// (5) [empty × 5]

let arr2 = Array(5, 4);
// (2) [5, 4] уже не пустой массив

let arr3 = Array("А тут что будет ?");
// ['А тут что будет ?'] создает масив со строкой

// Двумерный массив (матрица)
arr = [
    ['some' , 'text'] , 
    [2] , 
    [3.14 , true , false, 'end of']
];

console.log(arr[2][3]);
// end of доступ к масиву arr к 
// элементу с индексом 2
// [3.14 , true , false, 'end of']
// и внутри него к элементу 
// с индексом 3 --> 'end of'

// Так же мы можем работать с двумерными
// масивами как работали с одномерными 
// просто доступ прописывать [][] и т.д.

// такие матрицы можно 
// создавать любой глубины


// Функция split 
let str = 'Hello, my, name, 15, 34.5';
let arr_split = str.split(', ');
// В параметре функции сплит мы указываем
// по какому/каким сиволам 
// мы разбиваем строку
console.log(arr_split);
// (5) ['Hello', 'my', 'name', '15', '34.5']


// Функция join

let str_join = arr_split.join(' + ');
// В параметре функции join мы указываем
// какой сивол будет между элементами 
// в нашей новой строке
console.log(str_join);
// Hello + my + name + 15 + 34.5


// Функция splice
arr_split.splice(1, 3);
// принимает 2 параметра: с какого
// индекса элемента начинаем удалять, 
// сколько элементов удаляем
console.log(arr_split);
// (2) ['Hello', '34.5']
// удаляет класно потому что не создает 
// empty элементы а просто смещает их