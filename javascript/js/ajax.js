let load = function (url, callback) {
    let ajax = new XMLHttpRequest();
    ajax.open('GET', url);
    // дальше нам нужно дождаться пока наш файл полностью не загрузится и потом прочитать из него иформацию
    ajax.onload = function () {
        console.log(this);
    };
    // после того как файлик загрузился (событие .onload) мы будем вызывать функцию которая будет выводить информацию про обьект который мы получили. При помощи ключевого слова this мы выводим всю информацию которую получили из нашего юрл адреса
    // после того как мы посмотрели все параметры и всю информацию о нашем файле мы можем передать вместо 
    // console.log(this); ==> callback(this.responseText) 
    // this.responseText - текст внутри нашей всей информации о файлике .txt 
    // и вконеце нам нужно отправить сам запрос
    ajax.send();
};

// XMLHttpRequest() - обьект класса bom, если обширно говорить это и есть асинхронное програмирование, благодаря это класу мы можем связываться с определенными файлами , прочитывать их , прочитывать в асинхронном режиме, можем отправлять данные на сервер и можем получать данные при помощи JSONа. 
// Нам он нужен в этом случае для того чтобы прочитать данные из какого либо файла.
// для этого обращаемся к обьекту класа , к функции опен и в нее передаем 2 параметра: 1- при помощи какого метода читаем информацию с файла; 2- юрл адрес который мы принимаем первым параметров в нашей функции лоад;

// теперь , после создания функции нам необходимо ее вызвать
load ('text.txt', function(data) {
    console.log(data);
});
// первый параметр - юрл адрес - файл который мы будем открывать
// второй - колбек . В нашем случае будет безымянная функция которая будет принимать параметр data (по факту это те данные которые мы хотим вывести на экран которые мы записывали выше в ajax.onload)
// callback функция - наш второй параметр , сработает тогда , когда весь наш запрос , вся функция лоад выполнится , весь онлоад и сенд и тогда пойдет второй аргумент callback